@page "/Stadiums"
@using Application.Features.Stadiums.Dtos
@using Application.Features.Stadiums.Queries
@using MediatR
@inject IMediator Mediator

<PageTitle>Stadiums</PageTitle>

<h1>Stadiums</h1>
 <table class="table">
         <thead>
             <tr>
                 <th>Name</th>
                 <th>City</th>
                 <th>Capacity</th>
                 <th>Built Year</th>
                 <th>Pitch Length</th>
                 <th>Pitch Width</th>
             </tr>
         </thead>
         <tbody>
             @foreach (var stadium in _stadiums!)
             {
                 <tr>
                     <td>@stadium.Name</td>
                     <td>@stadium.City</td>
                     <td>@stadium.Capacity</td>
                     <td>@stadium.BuiltYear</td>
                     <td>@stadium.PitchLength</td>
                     <td>@stadium.PitchWidth</td>
                 </tr>
             }
         </tbody>
     </table>
@if (_stadiums == null)
{
    <p><em>Loading...</em></p>
}

@code {
    
    private List<GetAllStadiumsDto>? _stadiums;

    protected override async Task OnInitializedAsync()
    {
        _stadiums = await Mediator.Send(new GetAllStadiumsQuery());
    }

}